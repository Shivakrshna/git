1. What is Ansible and what are its main advantages?
Ansible is an open-source automation tool for configuration management, application deployment, and orchestration. Its main advantages are agentless architecture, simple YAML syntax, idempotency, and a large module library.

2. Explain the architecture of Ansible.
Ansible uses a controller machine to manage nodes over SSH (or WinRM for Windows). It is agentless, requiring no software installation on managed nodes. It uses inventory files to define hosts and playbooks to define automation logic.

3. What is a Playbook in Ansible?
A playbook is a YAML file containing a list of plays, where each play maps hosts to tasks. Playbooks are used to define automation workflows.

4. How does Ansible differ from Puppet and Chef?
Ansible is agentless and uses SSH, while Puppet and Chef require agents. Ansible uses YAML, while Puppet and Chef use their own DSLs. Ansible is push-based; Puppet and Chef are pull-based by default.

5. What is an Ansible Role?
A role is a way of organizing playbooks and tasks into reusable components. Roles have a standard directory structure and can include tasks, handlers, variables, templates, and files.

6. What is Ansible Galaxy?
Ansible Galaxy is a repository for sharing, finding, and reusing roles and collections created by the Ansible community.

7. How do you handle sensitive data in Ansible?
Sensitive data is managed using Ansible Vault, which allows you to encrypt variables, files, or entire playbooks.

8. What are Ansible modules?
Modules are reusable scripts that perform specific tasks (e.g., file, yum, service). They are the building blocks for tasks in playbooks.

9. What is an Inventory file?
An inventory file lists the hosts and groups of hosts Ansible manages. It can be static (INI/YAML) or dynamic (scripted).

10. What is idempotency in Ansible?
Idempotency ensures that running the same playbook multiple times has the same effect as running it once, avoiding unintended changes.

11. How do you use variables in Ansible?
Variables can be defined in playbooks, inventory files, roles, or passed at runtime. They are used to parameterize playbooks for flexibility.

12. What is Ansible Tower?
Ansible Tower is a web-based UI for Ansible that provides role-based access control, job scheduling, graphical inventory management, and auditing.

13. How do you debug a failed playbook?
Use verbose mode (-v, -vvv), the debug module, and review logs to identify and fix issues. You can also use --start-at-task to resume from a specific task.

14. What is a Handler in Ansible?
A handler is a task that runs only when notified by another task, often used for actions like restarting services after configuration changes.

15. How do you perform rolling updates with Ansible?
Use the serial keyword in playbooks to control batch size, updating a few servers at a time to avoid downtime.

16. How can you integrate Ansible with CI/CD pipelines?
Integrate Ansible with tools like Jenkins, GitLab CI, or Azure DevOps to automate deployment and configuration as part of the CI/CD process.

17. What is a Dynamic Inventory?
A dynamic inventory is generated by scripts or plugins to fetch hosts from cloud providers or other sources, allowing for scalable and flexible infrastructure management.

18. How do you ensure compliance using Ansible?
Write playbooks to collect configuration data, perform security checks, and generate compliance reports using modules like gather_facts and template.

19. How do you optimize playbook performance?
Use strategies like free or linear, limit unnecessary tasks, use async for parallel execution, and minimize the use of gather_facts when not needed.

20. Describe a challenging scenario you automated with Ansible.
Example: Automating blue-green deployments for zero downtime by provisioning duplicate infrastructure, deploying new versions, and switching traffic gradually using playbooks.

These questions and answers cover core concepts, best practices, and real-world scenarios relevant for a DevOps professional with 4 years of Ansible experience.

Related
What are the most common challenges when using Ansible for deployment
How can I optimize Ansible playbooks for better performance
What are the best practices for securing Ansible configurations
How does Ansible handle rollbacks and error recovery
What are some advanced features of Ansible that can enhance automation
